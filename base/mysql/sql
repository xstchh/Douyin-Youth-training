SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '用户id，自增主键',
  `name` varchar(255) NOT NULL COMMENT '用户名',
  'followcount' bigint(64) NOT NULL COMMENT '关注人数',
  'followercount' bigint(64) NOT NULL COMMENT '看json',
  'isfollow' bigint(64) NOT NULL COMMENT '关注操作',
  'avatar' varchar(255),
  'backgroundimage' varchar(255) NOT NULL COMMENT '背景图片',
  'signature' varchar(255),
  'totalfavorited' varchar(255) NOT NULL COMMENT '总点赞数'
  'workcount' bigint(20) NOT NULL COMMENT '作品数量',
  'favoritedcount' bigint(64) NOT NULL COMMENT '粉丝数量'
  `password` varchar(255) NOT NULL COMMENT '用户密码',
  PRIMARY KEY (`id`),
  KEY `name_password_idx` (`name`,`password`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=20044 DEFAULT CHARSET=utf8 COMMENT='用户表';

DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '评论id，自增主键',
  `user_id` bigint(20) NOT NULL COMMENT '评论发布用户id',
  `publish_id` bigint(20) NOT NULL COMMENT '评论视频id',
  `comment_text` varchar(255) NOT NULL COMMENT '评论内容',
  `create_date` datetime NOT NULL COMMENT '评论发布时间',
  `cancel` tinyint(4) NOT NULL DEFAULT '0' COMMENT '默认评论发布为0，取消后为1',
  PRIMARY KEY (`id`),
  KEY `publishIdIdx` (`publish_id`) USING BTREE COMMENT '评论列表使用视频id作为索引-方便查看视频下的评论列表'
) ENGINE=InnoDB AUTO_INCREMENT=1206 DEFAULT CHARSET=utf8 COMMENT='评论表';

DROP TABLE IF EXISTS `follow`;
CREATE TABLE `follow` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  `user_id` bigint(20) NOT NULL COMMENT '用户id',
  `follower_id` bigint(20) NOT NULL COMMENT '关注的用户',
  `cancel` tinyint(4) NOT NULL DEFAULT '0' COMMENT '默认关注为0，取消关注为1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `userIdToFollowerIdIdx` (`user_id`,`follower_id`) USING BTREE,
  KEY `FollowerIdIdx` (`follower_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1096 DEFAULT CHARSET=utf8 COMMENT='关注表';

DROP TABLE IF EXISTS `favorite`;
CREATE TABLE `favorite` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  `user_id` bigint(20) NOT NULL COMMENT '点赞用户id',
  `publish_id` bigint(20) NOT NULL COMMENT '被点赞的作品的id',
  `cancel` tinyint(4) NOT NULL DEFAULT '0' COMMENT '默认点赞为0，取消赞为1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `userIdtoPublishIdIdx` (`user_id`,`publish_id`) USING BTREE,
  KEY `userIdIdx` (`user_id`) USING BTREE,
  KEY `PublishIdx` (`video_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1229 DEFAULT CHARSET=utf8 COMMENT='点赞表';

DROP TABLE IF EXISTS `publish`;
CREATE TABLE `publish` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '自增主键，视频唯一id',
  `author_id` bigint(20) NOT NULL COMMENT '作者id',
  `publish_time` datetime NOT NULL COMMENT '发布时间',
  `title` varchar(255) DEFAULT NULL COMMENT '视频名称',
  PRIMARY KEY (`id`),
  KEY `time` (`publish_time`) USING BTREE,
  KEY `author` (`author_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=115 DEFAULT CHARSET=utf8 COMMENT='\r\n视频表';

DROP TABLE IF EXISTS `friend`;
CREATE TABLE `friend` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  'user_id' bigint(20) NOT NULL COMMENT '用户id'
  `friend_id` bigint(20) NOT NULL COMMENT '好友id',
  PRIMARY KEY (`id`),
 UNIQUE KEY `userIdToFriendIdIdx` (`user_id`,`friend_id`) USING BTREE,
  KEY `FriendIdIdx` (`friend_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1153 DEFAULT CHARSET=utf8 COMMENT='好友列表';

DROP PROCEDURE IF EXISTS `addFollowRelation`;
delimiter ;;
CREATE PROCEDURE `addFollowRelation`(IN user_id int,IN follower_id int)
BEGIN
	DECLARE cnt INT DEFAULT 0;
	SELECT COUNT(1) FROM follows f where f.user_id = user_id AND f.follower_id = follower_id INTO cnt;  # 判断是否已经存在该记录。
	IF cnt = 0 THEN
		INSERT INTO follows(`user_id`,`follower_id`) VALUES(user_id,follower_id);
	END IF;                                                             ##插入
	
	IF cnt != 0 THEN
		UPDATE follows f SET f.cancel = 0 WHERE f.user_id = user_id AND f.follower_id = follower_id;
	END IF;                                                     ##更新
END
;;
delimiter ;
DROP PROCEDURE IF EXISTS `delFollowRelation`;
delimiter ;;
CREATE PROCEDURE `delFollowRelation`(IN `user_id` int,IN `follower_id` int)
BEGIN
	DECLARE cnt INT DEFAULT 0;
	
	SELECT COUNT(1) FROM follows f WHERE f.user_id = user_id AND f.follower_id = follower_id INTO cnt; ## 查看是否之前有关系。
	IF cnt = 1 THEN
		UPDATE follows f SET f.cancel = 1 WHERE f.user_id = user_id AND f.follower_id = follower_id;
	END IF;
END
;;
delimiter ;

SET FOREIGN_KEY_CHECKS = 1;